#!/usr/bin/env python


# A little temporary hack for those of us not using virtualenv
import os
import sys
sys.path.insert(0, os.path.join(os.path.dirname(__file__), ".."))

import argparse
import dput.profile

from dput.util import obj_docs
from dput.exceptions import DputConfigurationError, InvalidConfigError

parser = argparse.ArgumentParser(description=' Debian package upload tool')
parser.add_argument('-H', '--host-list', action='store_true',
                    help='print the lists of hosts that dput knows about')
parser.add_argument('-p', '--print', action='store_true', dest='print_conf',
                    help='print the configuration that dput is using')
parser.add_argument('-s', '--show', action='store', choices=[
                                "checkers", "commands", "interfaces",
                                "metas", "processors", "uploaders", "all"],
                    help='show information about installed plug-ins.',
                    nargs='+')

group = parser.add_mutually_exclusive_group()
group.add_argument('-C', '--checker', action='store',
                    help='retrieve information about the checker asked')
group.add_argument('-P', '--processor', action='store',
                    help='retrieve information about the processor asked')
args = parser.parse_args()


if args.host_list:
    default = dput.profile.load_profile(None)
    print
    print "Default method: %s" % (default['method'])
    print
    for config in dput.profile.profiles():
        obj = dput.profile.load_profile("%s:%s" % (config, config))
        #                               ^^^^^^ fake arg for others
        if not "fqdn" in obj:  # likely localhost
            obj['fqdn'] = 'localhost'

        string = "{name} => {fqdn}  (Upload method: {method})".format(**obj)
        print string
    print
    sys.exit(0)

def show_class(klass, thing):
    try:
        docs = obj_docs(klass, thing)
        if docs is None:
            print \
              "Sorry, the author of that module didn't provide documentation."
        else:
            print docs
    except DputConfigurationError as e:
        print "Error with the config file:"
        print e
    except InvalidConfigError as e:
        print "Invalid config file:"
        print e

if args.print_conf:
    print "Not implemented"
    sys.exit(0)

if args.show:
    print "Not implemented"
    sys.exit(0)

if args.processor:
    show_class('processors', args.processor)

if args.checker:
    show_class('checkers', args.processor)
