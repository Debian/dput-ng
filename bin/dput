#!/usr/bin/env python
# -*- coding: utf-8 -*-
# vim: tabstop=4 expandtab shiftwidth=4 softtabstop=4

# Copyright (c) 2012 dput authors
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.

import sys
import logging
import argparse

# A little temporary hack for those of us not using virtualenv
import os
sys.path.insert(0, os.path.join(os.path.dirname(__file__), ".."))

import dput.core
import dput.changes
import dput.profile
import dput.exceptions
from dput import upload
dput.core.logger.setLevel(logging.INFO)


# XXX: This is a hack.
if "-H" in sys.argv or '--host-list' in sys.argv:
    default = dput.profile.load_profile(None)
    print
    print "Default method: %s" % (default['method'])
    print
    for config in dput.profile.profiles():
        obj = dput.profile.load_profile("%s:%s" % (config, config))
        #                               ^^^^^^ fake arg for others
        if not "fqdn" in obj:  # likely localhost
            obj['fqdn'] = 'localhost'

        string = "{name} => {fqdn}  (Upload method: {method})".format(**obj)
        print string
    print

    sys.exit(0)

if "-p" in sys.argv or '--print' in sys.argv:
    print "Print things"
    # dput.conf.print_configuration()
    sys.exit(0)


parser = argparse.ArgumentParser(description=' Debian package upload tool')
parser.add_argument('-d', '--debug', action='store_true', default=False,
                    help='Enable debug messages')
parser.add_argument('-c', '--config', metavar="FILE", action='store',
                    default=None, help='Configuration file to parse')
parser.add_argument('-D', '--dinstall', action='store_true',
                    help='(ignored silently)')
parser.add_argument('-e', '--delayed', action='store', metavar="DAYS",
            help='Upload to a delayed queue. Takes an argument from 0 to 15',
            type=int, choices=range(0, 16))
parser.add_argument('-f', '--force', action='store_true',
                    help='Force an upload')
parser.add_argument('-H', '--host-list', action='store_true',
                    help='print the lists of hosts that dput knows about')
parser.add_argument('-l', '--lintian', action='store_true',
                    help='Run lintian before upload')
parser.add_argument('-U', '--no-upload-log', action='store_true',
                    help='Do not write a .upload file after uploading')
parser.add_argument('-o', '--check-only', action='store_true',
                    help='Only check the package')
parser.add_argument('-p', '--print', action='store_true', dest='print_conf',
                    help='print the configuration that dput is using')
parser.add_argument('-P', '--passive', action='store_true',
                    help='Use passive mode for ftp uploads')
parser.add_argument('-s', '--simulate', action='store_true',
                    help='Simulate the upload only')
parser.add_argument('-u', '--unchecked', action='store_true',
                    help='Don\'t check GnuPG signature')
parser.add_argument('-v', '--version', action='store_true',
                    help='(ignored)')
parser.add_argument('-V', '--check-version', action='store_true',
                    help='(ignored)')
parser.add_argument('host', metavar="HOST", action='store', default=None,
                    help="Target host to upload a package", nargs="?")
parser.add_argument('changes', metavar="CHANGES-FILE", action='store',
                    default=None, help="A Debian .changes file")
args = parser.parse_args()


if args.config:
    dput.core.DPUT_CONFIG_LOCATIONS.append(args.config)

if args.debug:
    # XXX: Not ideal, but worksish. Revist debugging.
    dput.core.logger.setLevel(logging.DEBUG)

changes = dput.changes.parse_changes_file(
    args.changes,
    os.path.dirname(args.changes)
)

try:
    upload(changes, args)
except dput.exceptions.DputConfigurationError as e:
    dput.core.logger.critical(str(e))
    sys.exit(2)
except dput.exceptions.UploadException as e:
    dput.core.logger.critical(str(e))
    sys.exit(3)
except dput.exceptions.CheckerException as e:
    dput.core.logger.critical(str(e))
    sys.exit(1)
except KeyboardInterrupt:
    sys.exit(0)
