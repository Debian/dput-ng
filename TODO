TODO list for dput-ng
=====================

prime hacks neededing to be done

bin/dput
--------

  - revisit debugging
  - make a file logger?
  - implement dinstall switch (*sigh*)
  - implement --force switch (bypass all checker, ignore .upload file?)
  - write an .upload file

tests/*
-------

  - get 100% coverage
  - test ftp / sftp w/mockers (pyftpdlib)

dput/uploader.py
----------------

  - fix shitty names
  - other misc refactors
  - change invoke_dput to a less worse name
  - same with uploader

sftp
----

  - finish impl
  - ports
  - behave better w/ overrides

scp
---

  - implement

uploader
--------

  - uploaders lack generic manual authentication support, e.g. for password
    prompts. base work in sftp. refactor needed.
  - We /really/ should avoid that every upload does its own prompting. Instead
    we should consolidate user prompting through a callback. That allows to
    implement, say, a dput GUI. (refactor sftp)
  - A progress bar

rsync
-----

  - implement (do people *really* use this??)

dput/checker.py
---------------

  - refactor some crap, combine dput.uploader.get_uploader and
    dput.checker.get_checker.

  - add better None checks

  - catch errors in checkers and output sane warnings


dput/checkers/basiscs.py
------------------------

  - add better handing of dput.cf overrides to the checks

dput/util.py
------------

  - refactor, look at naming things like a sane person


profiles
--------

  - find a sane way to allow base checks without always having to copy the
    full list in each profile. (global_checkers?)

package
-------

  - Yep, make a native Debian package out of it (that's right)
  - file an ITP (and hope they shitstorm may pass by)


python2.6
---------

  - support it? we're close to wheezy, do we haveta?
